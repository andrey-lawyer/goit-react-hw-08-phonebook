{"version":3,"file":"static/js/549.6383ba77.chunk.js","mappings":"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","sources":["components/Loaders/MyThreeDots.jsx","../node_modules/nanoid/index.browser.js","redux/contacts/contactsSelectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","redux/filter/filterSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors/selectors.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ListContacts/ListContacts.styled.js","components/ListContacts/ListContacts.jsx","page/ContactPage/ContactPage.styled.js","page/ContactPage/ContactsPage.jsx","hooks/useContacts.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const MyThreeDots = () => (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#4fa94d\"\n    ariaLabel=\"three-dots-loading\"\n    visible={true}\n  />\n);\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const selectContacts = state => state.contact.items;\nexport const selectLoading = state => state.contact.isLoading;\nexport const selectError = state => state.contact.error;\n","import styled from 'styled-components';\n\nexport const FormUser = styled.form`\n  display: flex;\n  flex-direction: column;\n  border-radius: 2px;\n  padding: 10px;\n`;\nexport const LabelUser = styled.label`\n  margin-bottom: 5px;\n`;\n\nexport const InputUser = styled.input`\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    0px 1px 1px rgba(0, 0, 0, 0.12);\n  background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n  border-radius: 4px;\n  padding: 5px;\n  margin-bottom: 10px;\n`;\nexport const ButtonAdd = styled.button`\n  width: 100px;\n  margin: 0 auto;\n  margin-top: 10px;\n  padding: 3px;\n\n  background: linear-gradient(\n    95.2deg,\n    rgb(173, 252, 234) 26.8%,\n    rgb(192, 229, 246) 64%\n  );\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  :hover,\n  focus {\n    transform: scale(1.05);\n    background: linear-gradient(\n      to right,\n      rgb(182, 244, 146),\n      rgb(51, 139, 147)\n    );\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { nanoid } from 'nanoid';\n\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { addContact } from '../../redux/contacts/contactOperations';\n\nimport { FormUser, LabelUser, InputUser, ButtonAdd } from './Form.styled';\n\nconst loginInputIdName = nanoid();\nconst loginInputIdNumber = nanoid();\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const isInConacts = contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isInConacts) {\n      return toast(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, number }));\n    form.elements.number.value = '';\n    form.elements.name.value = '';\n  };\n\n  return (\n    <div>\n      <FormUser onSubmit={handleSubmit}>\n        <LabelUser htmlFor={loginInputIdName}>Name</LabelUser>\n        <InputUser\n          id={loginInputIdName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <LabelUser htmlFor={loginInputIdNumber}>Number</LabelUser>\n        <InputUser\n          id={loginInputIdNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n      </FormUser>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","export const selectFilter = state => state.filter.value;\n","import styled from 'styled-components';\n\nexport const FieldInput = styled.div`\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const InputFind = styled.input`\n  margin-top: 5px;\n\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    0px 1px 1px rgba(0, 0, 0, 0.12);\n  background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n  border-radius: 4px;\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\n\nimport { filterContact } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nimport { FieldInput, InputFind } from './Filter.styled';\n\nconst idUser = nanoid();\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FieldInput>\n      <label htmlFor={idUser}>Find contacts by name</label>\n      <InputFind\n        id={idUser}\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(filterContact(e.currentTarget.value))}\n      />\n    </FieldInput>\n  );\n};\n\nexport default Filter;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectFilter } from '../filter/filterSelectors';\nimport { selectContacts } from '../contacts/contactsSelectors';\n\nexport const selectGetVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  background: linear-gradient(-225deg, #5d9fff 0%, #b8dcff 48%, #6bbbff 100%);\n  border-radius: 5px;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  color: black;\n\n  padding: 20px 30px;\n`;\nexport const Label = styled.label`\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    0px 1px 1px rgba(0, 0, 0, 0.12);\n  background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n  border-radius: 4px;\n  padding: 5px;\n  margin-bottom: 10px;\n`;\nexport const Button = styled.button`\n  width: 100px;\n  margin: 0 auto;\n  margin-top: 10px;\n  padding: 3px;\n  background: linear-gradient(\n    95.2deg,\n    rgb(173, 252, 234) 26.8%,\n    rgb(192, 229, 246) 64%\n  );\n  border: none;\n  border-radius: 2px;\n  cursor: pointer;\n\n  :hover,\n  focus {\n    transform: scale(1.05);\n    background: linear-gradient(\n      to right,\n      rgb(182, 244, 146),\n      rgb(51, 139, 147)\n    );\n  }\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 16px;\n  margin: 0 auto;\n  margin-top: 0;\n  margin-bottom: 20px;\n`;\n","import ReactDOM from 'react-dom';\nimport { useEffect } from 'react';\nimport {\n  Overlay,\n  ModalWindow,\n  Form,\n  Label,\n  Input,\n  Button,\n  Paragraph,\n} from './Modal.styled';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport { updateContact } from '../../redux/contacts/contactOperations';\nconst loginInputIdName = nanoid();\nconst loginInputIdNumber = nanoid();\n\nconst Modal = ({ contact: { name, number, id }, onClickContact }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const onClickEscape = e => {\n      if (e.code === 'Escape') {\n        onClickContact();\n      }\n    };\n    document.addEventListener('keydown', onClickEscape);\n    return () => {\n      document.removeEventListener('keydown', onClickEscape);\n    };\n  }, [onClickContact]);\n\n  const handleBackdrop = event => {\n    if (event.target === event.currentTarget) {\n      onClickContact();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contact = { id, name, number };\n    dispatch(updateContact(contact));\n    onClickContact();\n  };\n\n  return ReactDOM.createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWindow>\n        <Form onSubmit={handleSubmit}>\n          <Paragraph>Changing a contact's information {name}</Paragraph>\n          <Label htmlFor={loginInputIdName}>Name</Label>\n          <Input\n            id={loginInputIdName}\n            defaultValue={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n\n          <Label htmlFor={loginInputIdNumber}>Number</Label>\n          <Input\n            id={loginInputIdNumber}\n            defaultValue={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\">Ok</Button>\n        </Form>\n      </ModalWindow>\n    </Overlay>,\n    document.body\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nexport const ListContacts = styled.ul`\n  margin: 0;\n  margin-left: 10px;\n  padding: 0;\n`;\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 5px;\n`;\nexport const NameUser = styled.p`\n  margin: 0;\n  width: 160px;\n`;\nexport const Phone = styled.p`\n  margin: 0;\n  width: 180px;\n`;\nexport const ButtonDel = styled.button`\n  margin-right: 20px;\n  width: 80px;\n  padding: 3px;\n\n  border-radius: 5px;\n\n  background-color: white;\n  cursor: pointer;\n\n  :hover,\n  focus {\n    transform: scale(1.05);\n    background: linear-gradient(to top, #ff0844 0%, #ffb199 100%);\n    color: white;\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  margin-right: 20px;\n  width: 80px;\n  padding: 3px;\n  border: none;\n  background: linear-gradient(\n    95.2deg,\n    rgb(173, 252, 234) 26.8%,\n    rgb(192, 229, 246) 64%\n  );\n  border-radius: 5px;\n  cursor: pointer;\n\n  :hover,\n  focus {\n    transform: scale(1.05);\n    background: linear-gradient(\n      to right,\n      rgb(182, 244, 146),\n      rgb(51, 139, 147)\n    );\n  }\n`;\n\nexport const Buttons = styled.div``;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectGetVisibleContacts } from '../../redux/selectors/selectors';\nimport { deleteContact } from '../../redux/contacts/contactOperations';\nimport Modal from '../Modal/Modal';\nimport {\n  ButtonDel,\n  ButtonEdit,\n  ItemContact,\n  NameUser,\n  ListContacts,\n  Phone,\n  Buttons,\n} from './ListContacts.styled';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {}, []);\n  const visibleContacts = useSelector(selectGetVisibleContacts);\n  const [contact, setContact] = useState(null);\n  const onClickModal = contactModal => {\n    setContact(contactModal);\n  };\n\n  const onClickContact = () => {\n    setContact(null);\n  };\n\n  return (\n    <>\n      <ListContacts>\n        {visibleContacts.map(({ name, number, id }) => (\n          <ItemContact key={id}>\n            <NameUser>{name}:</NameUser>\n            <Phone>{number}</Phone>\n            <Buttons>\n              <ButtonEdit\n                type=\"button\"\n                onClick={() => onClickModal({ name, number, id })}\n              >\n                Edit\n              </ButtonEdit>\n              <ButtonDel\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </ButtonDel>\n            </Buttons>\n          </ItemContact>\n        ))}\n      </ListContacts>\n      {contact && <Modal contact={contact} onClickContact={onClickContact} />}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport image from 'images/1.jfif';\nexport const Contacts = styled.div`\n  background: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    ),\n    url(${image});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  padding: 10px;\n  color: white;\n`;\n\nexport const TitleBook = styled.h1`\n  text-align: center;\n  margin: 0;\n`;\n\nexport const Loader = styled.div`\n  position: absolute;\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: #e36707cf;\n`;\n\nexport const TitleH2 = styled.h2`\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchContacts } from 'redux/contacts/contactOperations';\n\nimport ContactForm from 'components/Form/Form';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ListContacts/ListContacts';\n\nimport {\n  Loader,\n  Message,\n  TitleH2,\n  Contacts,\n  TitleBook,\n} from './ContactPage.styled';\nimport { useContacts } from 'hooks/useContacts';\nimport { notify } from 'services/phoneBookApi';\nimport { MyThreeDots } from 'components/Loaders/MyThreeDots';\n\nexport const ContactsPage = () => {\n  const { contacts, loading, error } = useContacts();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!error) return;\n    notify(error);\n  }, [error]);\n\n  return (\n    <Contacts>\n      <TitleBook>Phonebook</TitleBook>\n      <>\n        <ContactForm />\n        {loading && (\n          <Loader>\n            <MyThreeDots />\n          </Loader>\n        )}\n        <TitleH2>Your contacts</TitleH2>\n        {contacts.length === 0 ? (\n          <Message>Your phone book is empty, add a contact</Message>\n        ) : (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </>\n    </Contacts>\n  );\n};\n\nexport default ContactsPage;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/contactsSelectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  return { contacts, loading, error };\n};\n"],"names":["MyThreeDots","height","width","radius","color","ariaLabel","visible","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","selectContacts","state","contact","items","selectLoading","isLoading","selectError","error","FormUser","styled","LabelUser","InputUser","ButtonAdd","loginInputIdName","loginInputIdNumber","dispatch","useDispatch","contacts","useSelector","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","some","item","toLowerCase","toast","addContact","htmlFor","type","pattern","title","required","selectFilter","filter","FieldInput","InputFind","idUser","onChange","filterContact","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectGetVisibleContacts","includes","Overlay","ModalWindow","Form","Label","Input","Button","Paragraph","onClickContact","useEffect","onClickEscape","code","document","addEventListener","removeEventListener","ReactDOM","onClick","event","target","updateContact","defaultValue","body","ListContacts","ItemContact","NameUser","Phone","ButtonDel","ButtonEdit","Buttons","visibleContacts","useState","setContact","deleteContact","Contacts","image","TitleBook","Loader","Message","TitleH2","ContactsPage","loading","fetchContacts","notify"],"sourceRoot":""}